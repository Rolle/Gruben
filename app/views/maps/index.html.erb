<div class="row">
        <%= form_tag(adit_maps_path, :class => 'form-horizontal') do |f| %>
            <div class="form-group">
                <%= label_tag "Grube:", nil, {:class => "control-label col-sm-1"} %>
                <div class="col-sm-4">
                    <%= select_tag :adit_id, options_from_collection_for_select(@adits, "id", "name"), :class => "col-sm-4 form-control input-xlarge" %>
                </div>
                <%= submit_tag "Zeige", :class=>"btn btn-primary col-sm-1"%>
            </div>
        <%end%>
        <div id ="map" style="width:auto; height: 700px;"></div>        
        <p>
                Gruben: <%= @adits_count.to_s() -%> / 
                Mundlöcher: <%= @main_count.to_s -%> / 
                Orte: <%= @places_count.to_s -%> / 
                Sonstiges: <%= @flag_count.size().to_s %> 
        </p>
</div>

<% @images_adit.each do |img| %>
    <div class="modal fade" id="modal-<%= img.id.to_s%>">
        <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><%= img.adit.name %></h4>
              </div>
              <div class="modal-body">
                <p><%= raw (render partial: "image_artifacts/thumb", :locals => {:img => img} ).delete("\n")%></p>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
              </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
<% end %>

<script src="http://maps.google.com/maps/api/js?v=3.2&sensor=false"></script>

<script type='text/javascript'>   

        function onMarkerClick(e) {
            //console.log(this.options.win_url);
            //alert(this.options.image_id);
            $('#modal-' + this.options.image_id).modal();
        }

        <% if Rails.env.production? %>
                L.Icon.Default.imagePath = '/';
        <% else %>
                L.Icon.Default.imagePath = '<%= asset_path "" %>';
        <% end %>
        map = new L.Map('map');
         //map = new L.Map('map');
        var fullScreen = new L.Control.FullScreen(); 
        map.addControl(fullScreen);

        L.Control.measureControl().addTo(map);

        //var d = new L.Control.Distance(); map.addControl(d);
        map.addControl(new L.Control.Scale());

        //var osm = L.tileLayer.provider('OpenCycleMap4U');
        var osmde = L.tileLayer.provider('OpenStreetMap.DE');
        var ggl = new L.Google();
        var bing = new L.BingLayer("ApiJPrwDWWqUlXoy7gg460DQBa55V-i1XqWWQfnf1sz5HW4CfxUkBZ7afjaMtQ5W");
        var esri = new L.tileLayer.provider('Esri.WorldTopoMap')

        var markers_adits = L.featureGroup();
        //var markers_main = L.featureGroup();
        //var markers_adits = new L.MarkerClusterGroup();
        var markers_main = new L.MarkerClusterGroup();

        var markers_places = L.featureGroup();
        var markers_flag = L.featureGroup();
        //var markers_places = new L.MarkerClusterGroup();
        //var markers_flag = new L.MarkerClusterGroup();


        //var bing = new L.BingLayer("Anqm0F_JjIZvT0P3abS6KONpaBaKuTnITRrnYuiJCE0WOhH6ZbE4DzeT6brvKVR5");
        var markers_to_id = new Array();
        
        //map.addLayer(osm);
        map.addLayer(bing);

        //map.addLayer(markers_flag);
        map.addLayer(markers_adits);
        //map.addLayer(markers_main);
        //map.addLayer(markers_places);

        var baseMaps = {
                //"OSM": osm,
                "Google": ggl,
                "Bing": bing,
                "OSM DE": osmde,
                "Esri": esri
        };

        //icon for main adits
        var redMarker = L.AwesomeMarkers.icon({
                  icon: 'search', 
                  markerColor: 'red',
                  prefix: 'fa'
        })
        //icon for markers
        var orangeMarker = L.AwesomeMarkers.icon({
                  icon: 'question-sign', 
                  markerColor: 'orange',
                  prefix: 'fa'
        })
        //icon for adits
        var blueMarker = L.AwesomeMarkers.icon({
                  icon: 'home', 
                  markerColor: 'blue',
                  prefix: 'fa'
        })
        //icon for artifacts 
        var purpleMarker = L.AwesomeMarkers.icon({
                  icon: 'search', 
                  prefix: 'fa',
                  markerColor: 'purple'
        })

        
        var overlayMaps = {
            "Gruben": markers_adits,
            "Mundlöcher": markers_main,
            "Sonstiges": markers_flag,            
            "Orte": markers_places
        };
        L.control.layers(baseMaps, overlayMaps).addTo(map);
        

        <% if @places %>
                <% @places.each do |place| %>
                        marker = L.marker([<%= place.latitude %>, <%= place.longitude %>], {icon: redMarker});
                        var divNode = document.createElement("div");
                        divNode.innerHTML = '<%= place.link %>';
                        marker.bindPopup(divNode).openPopup();
                        marker.bindLabel('<%= place.description %>');
                        markers_places.addLayer(marker);
                <% end %>
        <% end %>
        
        <% if @images_adit %>
                <% @images_adit.each do |img| %>                        
                        <% if img.main %> //Grube!
                                marker = L.marker([<%= img.latitude %>, <%= img.longitude %>], {icon: blueMarker, image_id: <%=img.id %>});
                                markers_main.addLayer(marker);        //Gruben
                                //---- for modal dialog
                                //marker.on('click', onMarkerClick);
                                //------
                                var divNode = document.createElement("div");
                                divNode.innerHTML = '<%= raw (render partial: "image_artifacts/thumb", :locals => {:img => img} ).delete("\n")%>'
                                marker.bindPopup(divNode).openPopup();
                                marker.bindLabel('<%= img.adit.name %>');
                                <% if img.primary %> //Primär
                                        marker = L.marker([<%= img.latitude %>, <%= img.longitude %>], {icon: orangeMarker});
                                        markers_adits.addLayer(marker);
                                        divNode.innerHTML = '<%= raw (render partial: "image_artifacts/thumb", :locals => {:img => img} ).delete("\n")%>'
                                        marker.bindPopup(divNode).openPopup();
                                        marker.bindLabel('<%= img.adit.name %>');
                                <% end %>
                        <% else %>
                                marker = L.marker([<%= img.latitude %>, <%= img.longitude %>], {icon: purpleMarker});
                                markers_flag.addLayer(marker);
                                var divNode = document.createElement("div");
                                divNode.innerHTML = '<%= raw popup(img) %>';
                                marker.bindPopup(divNode).openPopup();
                                marker.bindLabel('<%= img.adit.name %>');                
                        <% end %>
                <% end %>
        <% end %>
        
        /*<% if @images_adit.size > 1 %>
            map.fitBounds(markers_main.getBounds());                
        <% end %>
        <% if @images_adit.size == 1 %>
            map.setView(new L.LatLng(<%= @images_adit[0].latitude%>,<%= @images_adit[0].longitude%>), 12);
        <% end %>      
        <% if @images_adit.size == 0 %>  
            map.setView(new L.LatLng(49.77477900007886,6.80334, 12);
        <% end %>      */
        map.setView(new L.LatLng(49.77477900007886,6.80334), 12);
</script>    
